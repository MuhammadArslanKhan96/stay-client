generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
}

model Hotel {
  id        String     @id @default(cuid())
  name     String  @unique
  city     String
  image    String[] 
  rating   Float
  rating_count Int
  packages String[]
  description String
  contact  Contact?
  room     Room[] 
  reviews  Review[]
  bookings Booking[]
}

model Contact{
  id    String     @id @default(cuid())
  number  String
  email String
  hotelId String @unique
  hotel Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Room {
  id   String     @id @default(cuid())
  name  String
  people  Int
  size  Int
  beds  Int
  bathroom  Int
  image  String
  available Boolean
  price Int
  rating Float
  rating_count Int
  package String
  reviews Review[]
  bookings Booking[]
  hotelId String 
  hotel Hotel @relation(fields:[hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
}

model Review{
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  title String 
  message String
  rating Float
  hotelId String
  roomId String
  bookingId String @unique
  booking Booking @relation(fields: [bookingId], references: [id])
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hotel Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}


model User{
  id String @id @default(cuid())
  email String @unique
  password String
  userName String @unique
  reviews Review[]
  bookings Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking{
  id String @id @default(cuid())
  userId String
  roomId String
  hotelId String
  reviewId String ?
  review Review ?
  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])
  hotel Hotel @relation(fields: [hotelId], references: [id])
  createdAt DateTime @default(now())
  startTime DateTime
  endTime DateTime
  duration Int
  price Int
  transactionHash String
}
